= Tutorial de Keycloak
:toc:
:toclevels: 3
:author: Paulo Jerônimo
:email: paulojeronimo@gmail.com
:uri-javaee-ambiente: https://github.com/paulojeronimo/javaee-ambiente
:keycloak-version: 1.4.0.Final

== Resumo

Este tutorial apresenta um passo a passo prático para a instalação e testes do http://keycloak.org[Keycloak] {keycloak-version}.

Os procedimentos descritos aqui podem ser realizados num ambiente Linux, OS X ou Windows mas, nesse último caso, você precisará instalar o http://cygwin.com[Cygwin] para não precisar fazer nenhuma adaptação nos comandos apresentados. A instalalação do Cygwin para a execução deste tutorial deve ser realizada conforme os passos descritos na página https://github.com/paulojeronimo/dicas-windows/blob/master/instalacao-cygwin.asciidoc[instalacao-cygwin.asciidoc] 


== Pré-requisitos

Para executar os passos deste tutorial precisará ter instalado em tua máquina:

. O JDK (este tutorial foi testado com a versão 1.8.0_60);
. O Maven (este tutorial foi testado com a versão 3.3.3);

[NOTE]
====
A montagem de um ambiente Java EE pode ser realizada rapidamente no Linux, no OS X ou no Windows (+ Cygwin), através do projeto {uri-javaee-ambiente}[javaee-ambiente].
====

== Instalando o Keycloak e testando seus exemplos

Baixe o http://keycloak.github.io/docs/userguide/html/server-installation.html#d4e118[instalador de desenvolvimento] (arquivo http://downloads.jboss.org/keycloak/{keycloak-version}/keycloak-demo-{keycloak-version}.tar.gz[keycloak-demo-{keycloak-version}.tar.gz]). Esse arquivo contém tudo o que é necessário para a execução dos exemplos desse tutorial. Isso inclui um servidor Wildfly 9.0.0.Final com o servidor Keycloak e seus adaptadores já configurados.

[NOTE]
====
Se você montou teu ambiente através do projeto {uri-javaee-ambiente}[javaee-ambiente] o download e a descompactação do instalador de desenvolvimento do keycloak pode ser realizado pelo comando ``keycloak install demo``. Dessa forma, ele ficará instalado no diretório configurado para a variável `FERRAMENTAS_DIR`.
====

Descompacte esse arquivo. __Você pode utilizar o comando abaixo:__
[source,bash,subs="attributes"]
----
tar xvfz keycloak-demo-{keycloak-version}.tar.gz
----

Ajuste o valor da variável JBOSS_HOME da seguinte forma:
[source,bash,subs="attributes"]
----
export JBOSS_HOME=$PWD/keycloak-demo-{keycloak-version}/keycloak
----

Inicie o Keycloak com o seguinte comando:
[source,bash]
----
$JBOSS_HOME/bin/standalone.sh &
----

Abra um shell que contenha o Maven no `PATH`.

Vá para o diretório `$JBOSS_HOME/../examples/preconfigured-demo` e leia o arquivo `README.md`. Os passos descritos a seguir são uma simplificação dos passos apresentados nele.

[source,bash]
----
cd $JBOSS_HOME/../examples/preconfigured-demo
view README.md
----

Abra a URL http://localhost:8080/auth/admin/master/console/#/create/realm.

Logue-se com o usuário `admin` e a senha `admin`. Será solicitada a troca da senha.

Clique em `Select file` e selecione o arquivo `testrealm.json` que está dentro do diretório em que você está. Em seguida, clique no botão `Upload`.

Volte ao shell. Compile e implante os exemplos com os comandos a seguir. Observe o log do Wildfly enquanto o último comando é executado para averiguar a implantação dos exemplos.

[source,bash]
----
mvn clean install
mvn wildfly:deploy
----

Acesse a URL http://localhost:8080/customer-portal/customers/view.jsp. Será solicitado um usuário (bburke@redhat.com) e uma senha (password). 

Observe o log do Wildfly.

Observe a tela que será apresentada. Note o valor de `Servlet User Principal`.

Clique em `products`. Observe que não foi solicitada nova autenticacão apesar do contexto ter sido alterado para `product-portal` (esta app também utiliza os mecanismos de segurança do Java EE).

Clique em `Product Listing`. Note que o valor do `User` é o mesmo que o apresentado na tela `customers` para o campo `Servlet User Principal`.

Retorne a tela anterior e clique em `Admin Interface`. Note que será exibida a mensagem `Forbidden`. Isso ocorre pelo fato do usuário logado (bburke@redhat.com) não ter o perfil `admin` (exigido para esse acesso). Detalhe: essa configuração é visível no arquivo `testrealm.json`  (linha 25):

----
$ sed -n 25p testrealm.json
            "realmRoles": [ "user" ],
----

Retorne a URL http://localhost:8080/customer-portal/customers/view.jsp.

Clique em `manage.acct`. Navegue pelos links.

Em `Account` edite os campos `Email`, `Fist name` e `Last name` informando teus próprios dados e clique em `Save`.

Em `Password`, altere a senha e clique em `Save`.

Em `Sessions`, clique em `Log out all sessions`.

Efetue o `Log in` informando teu `email` e senha. Após o logon, note que o `Username` permanece `bburke@redhat.com`.

Observe o log do Wildfly.

Em `Applications` clique em `customer-portal-js`. Em seguida, em `Customer Listing`. Note a alteração do valor dos campos `Email` e `Full Name`.

Clique em `logout`.

Efetue o `Log in` informando `admin` e `password`.

Clique em `products` e, em seguida, em `Admin Interface`. Note que, agora, o acesso a tela de administração não exibe a mensagem `Forbiden` liberando a visualização como deveria ser. Isso ocorre pelo fato do usuário logado (admin) ter o perfil `admin` (exigido para esse acesso). Detalhe: essa configuração é visível no em `testrealm.json` (linha 71).

Vá para a URL http://localhost:8080/customer-portal/. Clique em `Customer Admin Interface`. Note que, agora, também é obtido o acesso a esse link.

Volte para a tela anterior. Clique em `Customer Listing` e, em seguida, em `manage acct`. Note que o usuário logado (admin) não tem permissão para acessar esse link. 

Volte para a tela anterior e clique em `logout`. Note que você estará na página `Customer Portal`. Clique em `Customer Listing`.

Efetue o `Log in` como `bburque@redhat.com` (utilize a nova senha que você criou).

Clique em `manage acct`.

Em `Applications`, clique em `angular-product`.

Clique em `Reload` para exibir a lista de produtos.

Clique em `Sign Out` para voltar a tela de autenticação.

Observe que qualquer tentativa de acesso a URLs protegidas pelo Keycloak (como, por exemplo, http://localhost:8080/angular-product/) será redirecionada a tela de autenticação provida pelo Keycloak.

== O exemplo basic-auth

O estrutura do exemplo `basic-auth` pode ser observada pela seguinte saída:

----
$ tree
.
|-- basicauthrealm.json
|-- pom.xml
|-- README.md
`-- src
    `-- main
        |-- java
        |   `-- org
        |       `-- keycloak
        |           `-- example
        |               `-- basicauth
        |                   |-- BasicAuthService.java
        |                   `-- BasicAuthServiceApplication.java
        `-- webapp
            `-- WEB-INF
                |-- keycloak.json
                `-- web.xml

9 directories, 7 files
----

=== Compilando, implantando e testando a aplicação

Acesse a interface administrativa do Keycloak e importe o arquivo `basicauthrealm.json`.

Compile e implante a aplicação:

[source,bash]
----
mvn clean package wildfly:jboss
----

Teste a aplicação:

[source,bash]
----
curl http://admin:password@localhost:8080/basicauth/service/echo?value=hello
----

Observe, na interface administrativa do Keycloak, a existência de uma sessão.

=== Entendendo 

== A console de administração do Keycloak

A URL http://localhost:8080/auth/admin/index.html possibilita o acesso a interface de administração do Keycloak. 

[NOTE]
----
Você se lembra que trocou a senha para o usuário admin no primeiro acesso a essa interface?
----

== Baixando e compilando os fontes do Keycloak

=== Utilizando uma versão específica

Para gerar a versão {keycloak-version}:

[source,bash,subs="attributes"]
----
git clone https://github.com/keycloak/keycloak
cd keycloak
git tag
git checkout {keycloak-version}
mvn install
----

Mais detalhes sobre como contribuir na solução de um bug, gerar um release, etc, podem ser obtidos na página https://github.com/keycloak/keycloak/blob/master/misc/HackingOnKeycloak.md[HackingOnKeycloak.md].
